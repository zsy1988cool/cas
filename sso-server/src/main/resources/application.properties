##
# CAS Server Context Configuration
#
server.context-path=/sso-server
server.port=8443

server.ssl.key-store=classpath:luckykeystore
server.ssl.key-store-password=changeit
server.ssl.key-password=changeit
server.ssl.keyAlias=luckykey

server.max-http-header-size=2097152
server.use-forward-headers=true
server.connection-timeout=20000
server.error.include-stacktrace=ALWAYS

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.min-spare-threads=10
server.tomcat.max-threads=200
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false

# Indicates that systemPropertiesOverride can be used.
# Set to false to prevent users from changing the default accidentally. Default true.
spring.cloud.config.allow-override=true

# External properties should override system properties.
spring.cloud.config.override-system-properties=false

# When allowOverride is true, external properties should take lowest priority, and not override any
# existing property sources (including local config files).
spring.cloud.config.override-none=false

# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

# Control the security of the management/actuator endpoints
# The 'enabled' flag below here controls the rendering of details for the health endpoint amongst other things.
management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

# Define a CAS-specific "WARN" status code and its order
management.health.status.order=WARN, DOWN, OUT_OF_SERVICE, UNKNOWN, UP

# Control the security of the management/actuator endpoints
# With basic authentication, assuming Spring Security and/or relevant modules are on the classpath.
security.basic.authorize-mode=role
security.basic.path=/cas/status/**
# security.basic.enabled=true
# security.user.name=casuser
# security.user.password=

##
# CAS Web Application Session Configuration
#
server.session.timeout=300
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE

##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
spring.thymeleaf.template-resolver-order=100
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

##
# CAS Authentication Credentials
#
#cas.authn.accept.users=admin::123,user::123

cas.tgc.secure=false
cas.serviceRegistry.initFromJson=true

cas.slo.disabled=false
cas.slo.asynchronous=false
cas.logout.followServiceRedirects=true
cas.logout.removeDescendantTickets=true
cas.logout.confirmLogout=false

#redis ticket
cas.ticket.registry.redis.host=127.0.0.1
cas.ticket.registry.redis.database=0
cas.ticket.registry.redis.port=6379
cas.ticket.registry.redis.password=666666
cas.ticket.registry.redis.timeout=2000
cas.ticket.registry.redis.useSsl=false
cas.ticket.registry.redis.usePool=true
cas.ticket.registry.redis.pool.max-active=20
cas.ticket.registry.redis.pool.maxIdle=8
cas.ticket.registry.redis.pool.minIdle=0
cas.ticket.registry.redis.pool.maxActive=8
cas.ticket.registry.redis.pool.maxWait=-1
cas.ticket.registry.redis.pool.numTestsPerEvictionRun=0
cas.ticket.registry.redis.pool.softMinEvictableIdleTimeMillis=0
cas.ticket.registry.redis.pool.minEvictableIdleTimeMillis=0
cas.ticket.registry.redis.pool.lifo=true
cas.ticket.registry.redis.pool.fairness=false
cas.ticket.registry.redis.pool.testOnCreate=false
cas.ticket.registry.redis.pool.testOnBorrow=false
cas.ticket.registry.redis.pool.testOnReturn=false
cas.ticket.registry.redis.pool.testWhileIdle=false

#redis session
cas.webflow.autoconfigure=true
cas.webflow.alwaysPauseRedirect=false
cas.webflow.refresh=true
cas.webflow.redirectSameState=false

cas.webflow.session.lockTimeout=30
cas.webflow.session.compress=false
cas.webflow.session.maxConversations=5
cas.webflow.session.storage=true
spring.session.store-type=redis
spring.redis.host=127.0.0.1
spring.redis.password=666666
spring.redis.port=6379

#support ldap
#cas.authn.ldap[0].principalAttributeList=displayName,givenName
cas.authn.ldap[0].principalAttributePassword=userPassword
cas.authn.ldap[0].collectDnAttribute=false
cas.authn.ldap[0].principalDnAttributeName=principalLdapDn
cas.authn.ldap[0].allowMultiplePrincipalAttributeValues=true
cas.authn.ldap[0].allowMissingPrincipalAttributeValue=true
cas.authn.ldap[0].credentialCriteria=
cas.authn.attributeRepository.ldap[0].attributes.uid=uid
#cas.authn.attributeRepository.ldap[0].attributes.displayName=displayName
cas.authn.ldap[0].ldapUrl=ldap://10.130.17.149:389
cas.authn.ldap[0].bindDn=cn=admin,dc=example,dc=org
cas.authn.ldap[0].bindCredential=admin

cas.authn.ldap[0].useSsl=false
cas.authn.ldap[0].poolPassivator=none
cas.authn.ldap[0].type=AUTHENTICATED
cas.authn.ldap[0].searchFilter=(|(uid={user})(mail={user})(mobile={user}))
cas.authn.ldap[0].baseDn=dc=example,dc=org

cas.authn.ldap[0].passwordEncoder.type=com.lucky.sso.security.LuckyPasswordEncoder
#cas.authn.ldap[0].dnFormat=uid=%s,ou=people,dc=example,dc=org
#cas.authn.ldap[0].passwordEncoder.type=NONE 
#cas.authn.ldap[0].passwordEncoder.characterEncoding=UTF-8
#cas.authn.ldap[0].passwordEncoder.encodingAlgorithm=MD5

# password management
cas.authn.pm.enabled=true
cas.authn.pm.autoLogin=true
cas.authn.pm.ldap.type=GENERIC
cas.authn.pm.ldap.ldapUrl=${cas.authn.ldap[0].ldapUrl}
cas.authn.pm.ldap.useSsl=false
cas.authn.pm.ldap.connectTimeout=5000
cas.authn.pm.ldap.baseDn=${cas.authn.ldap[0].baseDn}
cas.authn.pm.ldap.searchFilter=${cas.authn.ldap[0].searchFilter}
cas.authn.pm.ldap.subtreeSearch=true
cas.authn.pm.ldap.bindDn=${cas.authn.ldap[0].bindDn}
cas.authn.pm.ldap.bindCredential=${cas.authn.ldap[0].bindCredential}
cas.authn.pm.ldap.minPoolSize=3
cas.authn.pm.ldap.maxPoolSize=10
cas.authn.pm.ldap.validateOnCheckout=true
cas.authn.pm.ldap.validatePeriodically=true
cas.authn.pm.ldap.validatePeriod=600
cas.authn.pm.ldap.validateTimeout=5000
cas.authn.pm.ldap.failFast=true
cas.authn.pm.ldap.idleTime=500
cas.authn.pm.ldap.prunePeriod=600
cas.authn.pm.ldap.blockWaitTime=5000

spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=826494556@qq.com
spring.mail.password=sacravmywzuwbcjf
spring.mail.testConnection=false
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true

#cas.server.name=https://sso.lucky.net:${server.port}
#cas.server.prefix=${cas.server.name}/${server.context-path}
cas.server.name=http://sso.lucky.net:8080
cas.server.prefix=http://sso.lucky.net:8080/sso-server

cas.authn.pm.reset.securityQuestionsEnabled=false
cas.authn.pm.reset.mail.from=${spring.mail.username}
cas.authn.pm.reset.mail.subject=zsy.com reset password
cas.authn.pm.reset.mail.text=\u6253\u5F00\u4E00\u4E0B\u94FE\u63A5\u91CD\u7F6E\u60A8\u7684\u5BC6\u7801: %s
#cas.authn.pm.policyPattern=\\w{6,24}


############oauth###########
cas.authn.oauth.refreshToken.timeToKillInSeconds=2592000
cas.authn.oauth.code.timeToKillInSeconds=30
cas.authn.oauth.code.numberOfUses=1
cas.authn.oauth.accessToken.releaseProtocolAttributes=true
cas.authn.oauth.accessToken.timeToKillInSeconds=7200
cas.authn.oauth.accessToken.maxTimeToLiveInSeconds=28800
cas.authn.oauth.grants.resourceOwner.requireServiceHeader=true
cas.authn.oauth.userProfileViewType=NESTED
#https://www.iteye.com/blog/fp-forever-2419547